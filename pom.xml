<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.chunyang</groupId>
	<artifactId>chunyang-project</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>chunyang-project</name>
	<url>http://maven.apache.org</url>

	<!-- 通过使用maven的properties标签属性来管理maven依赖的包的版本 如果有子项目 一定要讲相关内容的依赖包版本存放在父pom.xml文件中 -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>3.2.17.RELEASE</spring.version>
		<project.version>0.0.1-SNAPSHOT</project.version>
		<aspectjweaver.version>1.8.7</aspectjweaver.version>
		<commons-dbcp.version>1.2.2</commons-dbcp.version>
		<aopalliance.version>1.0</aopalliance.version>
		<commons-codec.version>1.9</commons-codec.version>
		<bcprov-jdk16.version>1.46</bcprov-jdk16.version>
		<fastjson.version>1.2.38</fastjson.version>
		<jackson-annotations.version>2.0.5</jackson-annotations.version>
		<jackson-databind.version>2.0.5</jackson-databind.version>
		<jackson-core.version>2.0.5</jackson-core.version>
		<log4j.version>1.2.17</log4j.version>
		<mysql-connector-java.version>5.0.7</mysql-connector-java.version>
		<mybatis.version>3.2.1</mybatis.version>
		<mybatis-spring.version>1.3.1</mybatis-spring.version>
		<pagehelper.version>3.2.3</pagehelper.version>
	</properties>
	<modules>
		<module>chunyang-api</module>
		<module>chunyang-service</module>
		<module>chunyang-setup</module>
		<module>chunyang-web</module>
	</modules>

	<dependencies>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-resources-plugin</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- 这个jar包是用于实现 springAOP的 springAOP就是通过依赖下面的jar包来实现的动态代理 -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectjweaver.version}</version>
		</dependency>


		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>${commons-dbcp.version}</version>
		</dependency>

		<dependency>
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
			<version>${aopalliance.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commons-codec.version}</version>
		</dependency>

		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk16</artifactId>
			<version>${bcprov-jdk16.version}</version>
		</dependency>


		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-connector-java.version}</version>
		</dependency>
         <!-- mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>
        
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${mybatis-spring.version}</version>
		</dependency>

		<!-- 分页 -->
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper</artifactId>
			<version>${pagehelper.version}</version>
		</dependency>


		<!-- 有关返回值为json的jar包 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson-annotations.version}</version>
		</dependency>


		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-databind.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-core.version}</version>
		</dependency>


		<!-- 日志相关jar包 -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<!-- 有关返回值为json的jar包 -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- 构建项目 -->
	<!-- <build> 子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本地配置都会覆盖这里的配置 
		<pluginManagement> 插件列表 <plugins> 插件信息 <plugin> 构建唯一标识 <groupId>org.apache.maven.plugins</groupId> 
		项目的名称 <artifactId>maven-compiler-plugin</artifactId> 项目版本信息 <version>2.3.2</version> 
		扩展配置项 <configuration> <source>1.7</source> <target>1.7</target> <compilerArguments> 
		<verbose /> <bootclasspath>${JAVA_HOME}/jre/lib/rt.jar:${JAVA_HOME}/jre/lib/jce.jar</bootclasspath> 
		</compilerArguments> </configuration> </plugin> </plugins> </pluginManagement> 
		</build> -->

</project>
